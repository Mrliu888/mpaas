syntax = "proto3";

package infraboard.mpaas.task;
option go_package = "github.com/infraboard/mpaas/apps/task";

import "common/meta/meta.proto";
import "apps/task/pb/job_task.proto";
import "apps/pipeline/pb/pipeline.proto";

message PipelineTaskSet {
	// 总数量
	// @gotags: bson:"total" json:"total"
    int64 total = 1;
	// 清单
	// @gotags: bson:"items" json:"items"
    repeated PipelineTask items = 2;
}

message PipelineTask {
    // 元信息
    // @gotags: bson:",inline" json:"meta"
    common.meta.Meta meta = 1;
    // 运作时参数
    // @gotags: bson:",inline" json:"params"
    RunPipelineRequest params = 2;
	// 关联Job, 如果是任务, pipeline后面可能会修改, 因此需要保存运行时的pipeline定义
	// @gotags: bson:"pipeline" json:"pipeline"
	pipeline.Pipeline pipeline = 3;
	// 任务当前状态
	// @gotags: bson:"status" json:"status"
	PipelineTaskStatus status = 4;
}

message RunPipelineRequest {
    // pipeline id
	// @gotags: bson:"pipeline_id" json:"pipeline_id" validate:"required"
    string pipeline_id = 1;
	// 试运行
	// @gotags: bson:"dry_run" json:"dry_run"
	bool dry_run = 2;
	// 执行人
	// @gotags: bson:"run_by" json:"run_by" validate:"required"
	string run_by = 4;
	// 任务标签
	// @gotags: bson:"labels" json:"labels"
	map<string, string> labels = 15;
}

message PipelineTaskStatus {
	// 任务当前状态
	// @gotags: bson:"stage" json:"stage"
    STAGE stage = 1;
	// 任务开始时间
	// @gotags: bson:"start_at" json:"start_at"
    int64 start_at = 2;
	// 任务结束时间
	// @gotags: bson:"end_at" json:"end_at"
    int64 end_at = 3;
	// 状态描述
	// @gotags: bson:"message" json:"message"
	string message = 4;
	// Pipeline 运行时环境变量
	// @gotags: bson:"runtime_envs" json:"runtime_envs"
	repeated RuntimeEnv runtime_envs = 5;
	// 任务状态详细描述, 用于Debug
	// @gotags: bson:"stage_status" json:"stage_status"
	repeated StageStatus stage_status = 6;
}

message StageStatus {
    // stage名称
	// @gotags: bson:"name" json:"name"
    string name = 1;
	// 任务状态, pipeline task表不存储, 已存储在 job task表中, 通过关联查询获得
	// @gotags: bson:"-" json:"job_tasks"
	repeated JobTask job_tasks = 15;
}