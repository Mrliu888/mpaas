syntax = "proto3";

package infraboard.mpaas.task;
option go_package = "github.com/infraboard/mpaas/apps/task";

import "mpaas/apps/job/pb/job.proto";
import "mpaas/apps/pipeline/pb/pipeline.proto";

message JobTaskSet {
	// 总数量
	// @gotags: bson:"total" json:"total"
    int64 total = 1;
	// 清单
	// @gotags: bson:"items" json:"items"
    repeated JobTask items = 2;
}

message JobTask {
    // 元信息
    // @gotags: bson:",inline" json:"meta"
    Meta meta = 1;
	// task定义, job运行时参数
	// @gotags: bson:",inline" json:"spec"
	pipeline.RunJobRequest spec = 2;
	// 任务当前状态
	// @gotags: bson:"status" json:"status"
	JobTaskStatus status = 3;
	// 关联Job
	// @gotags: bson:"job" json:"job"
	job.Job job = 4;
}

message Meta {
    // 创建时间
    // @gotags: bson:"create_at" json:"create_at"
    int64 create_at = 1;
    // 更新时间
    // @gotags: bson:"update_at" json:"update_at"
    int64 update_at = 2;
    // 更新人
    // @gotags: bson:"update_by" json:"update_by"
    string update_by = 3;
}

enum STAGE {
	// 等待执行
	PENDDING = 0;
	// 运行中
	ACTIVE = 1;
	// 回滚中, 回滚是一种特殊的运行中状态, 回滚时会运行回滚参数
	ROLLBACKING = 2;
	// 取消中
	CANCELING = 3;
	// 任务被取消
	CANCELED = 10;
	// 运行失败
	FAILED = 11;
	// 运行成功
	SUCCEEDED = 12;
	// 跳过执行, 比如Pipeline中的一些可选流程
	SKIPPED = 13;
}

message JobTaskStatus {
	// 任务当前状态
	// @gotags: bson:"stage" json:"stage"
    STAGE stage = 1;
	// 任务开始时间
	// @gotags: bson:"start_at" json:"start_at"
    int64 start_at = 2;
	// 任务结束时间
	// @gotags: bson:"end_at" json:"end_at"
    int64 end_at = 3;
	// 状态描述
	// @gotags: bson:"message" json:"message"
	string message = 4;
	// 任务状态详细描述, 用于Debug
	// @gotags: bson:"detail" json:"detail"
	string detail = 5;
	// Job Task运行时环境变量, 大写开头的变量会更新到pipline中, 注入到后续执行的任务中
	// 小写开头的变量, 作为Task运行后的输出, task自己保留
	// @gotags: bson:"runtime_envs" json:"runtime_envs"
	repeated RuntimeEnv runtime_envs = 6;
	// 任务运行后的产物信息, 用于界面展示
	// @gotags: bson:"markdown_output" json:"markdown_output"
	string markdown_output = 7;
	// 任务所需的临时资源
	// @gotags: bson:"temporary_resources" json:"temporary_resources"
	repeated TemporaryResource temporary_resources = 8;
	// 任务事件
	// @gotags: bson:"events" json:"events"
	repeated Event events = 9;
	// 事件回调状态
	// @gotags: bson:"webhook_status" json:"webhook_status"
	repeated CallbackStatus webhook_status = 10;
	// Jot Task 关注人通知状态
	// @gotags: bson:"notify_status" json:"notify_status"
	repeated CallbackStatus notify_status = 11;
}

message CallbackStatus {
	// POST URL
	// @gotags: bson:"description" json:"description" validate:"required"
	string description = 5;
	// 开始时间
	// @gotags: bson:"start_at" json:"start_at"
	int64 start_at = 1;
	// 耗时多久，单位毫秒
	// @gotags: bson:"cost" json:"cost"
	int64 cost = 2;
	// 是否推送成功
	// @gotags: bson:"success" json:"success"
	bool success = 3;
	// 异常时的错误信息
	// @gotags: bson:"message" json:"message"
	string message = 4;
	// 异常时的详细信息描述
	// @gotags: bson:"events" json:"events"
	repeated Event events = 6;
}

enum EVENT_LEVEL {
	// debug信息, 无影响
	DEBUG = 0;
	// info, 普通通知
	INFO = 1;
	// warn, 可能导致任务异常
	WARN = 2;
	// error, 任务的一些错误信息
	ERROR = 3;
}

message Event {
	// 事件发生的时间
	// @gotags: bson:"time" json:"time"
    int64 time = 1;
	// 事件等级
	// @gotags: bson:"level" json:"level"
	EVENT_LEVEL level = 2;
	// 事件描述
	// @gotags: bson:"message" json:"message"
	string message = 3;
	// 事件的详情数据
	// @gotags: bson:"detail" json:"detail"
	string detail = 4;
	// 标签
	// @gotags: bson:"labels" json:"labels"
	map<string, string> labels = 15;
}

// task 运行过程中 产生的临时环境变量, 即用记录Job的输出(将输出保存为环境变量)
// 在Task结束时同步到Pipeline Task中, 后续Task执行时 读取并注入
// 注意只有大写的变量才会被导出
message RuntimeEnv {
	// 环境变量名称
	// @gotags: bson:"name" json:"name"
	string name = 1;
	// 环境变量值
	// @gotags: bson:"value" json:"value"
	string value = 2;
	// 是否只读 不允许修改
	// @gotags: bson:"read_only" json:"read_only"
	bool read_only = 3;
	// 更新时间
	// @gotags: bson:"update_at" json:"update_at"
	int64 update_at = 4;
	// 被谁更新的, 当值被修改后，追踪下谁修改的
	// @gotags: bson:"update_task_id" json:"update_task_id"
	string update_task_id = 5;
}

// 临时资源, 在Pipline允许结束时,调用释放
message TemporaryResource {
	// 资源的类型, 比如 configmap
	// @gotags: bson:"kind" json:"kind"
	string kind = 1;
	// 资源的名字, 资源的集群和Namespace 由job维护
	// @gotags: bson:"name" json:"name"
	string name = 2;
	// 资源的详情数据
	// @gotags: bson:"detail" json:"detail"
	string detail = 3;
    // 创建时间
    // @gotags: bson:"create_at" json:"create_at"
    int64 create_at = 4;
    // 创建时间
    // @gotags: bson:"release_at" json:"release_at"
    int64 release_at = 5;
}

message RunTaskRequest {
	// 任务名称
	// @gotags: bson:"name" json:"name"
    string name = 1;
	// job名称定义
	// @gotags: bson:"job_spec" json:"job_spec"
    string job_spec = 2;
	// 试运行, 并不会真正执行Job
	// @gotags: bson:"dry_run" json:"dry_run"
	bool dry_run = 3;
	// 手动更新Job的状态, 默认由job runner的operator更新
	// @gotags: bson:"manual_update_status" json:"manual_update_status"
	bool manual_update_status = 4;
	// job运行时参数
	// @gotags: bson:"params" json:"params"
	job.RunParamSet params = 5;
	// 标签
	// @gotags: bson:"labels" json:"labels"
	map<string, string> labels = 15;
}

