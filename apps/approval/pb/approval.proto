syntax = "proto3";

package infraboard.mpaas.approval;
option go_package = "github.com/infraboard/mpaas/apps/approval";

import "common/meta/meta.proto";
import "apps/pipeline/pb/pipeline.proto";

message ApprovalSet {
    // 总数
    // @gotags: bson:"total" json:"total"
    int64 total = 1;
    // 列表
    // @gotags: bson:"items" json:"items"
    repeated Approval items = 2;
}

// 发布申请单
message Approval  {
    // 元信息
    // @gotags: bson:",inline" json:"meta"
    common.meta.Meta meta = 1;
    // 创建信息
    // @gotags: bson:",inline" json:"spec"
    CreateApprovalRequest spec = 2;
    // 部署流水线配置
    // @gotags: bson:"-" json:"pipeline"
    pipeline.Pipeline pipeline = 7;
    // 发布单当前状态
    // @gotags: bson:"status" json:"status"
    Status status = 3;
}

// 创建发布申请
message CreateApprovalRequest {
    // 发布号
    // @gotags: bson:"domain" json:"domain" validate:"required"
    string domain = 1;
    // 发布号
    // @gotags: bson:"namespace" json:"namespace" validate:"required"
    string namespace = 2;
    // 是否是模版
    // @gotags: bson:"is_template" json:"is_template"
    bool is_template = 3;
    // 创建人
    // @gotags: bson:"create_by" json:"create_by" validate:"required"
    string create_by = 4;
    // 申请人列表, 申请通过后, 由申请人执行发布
    // @gotags: bson:"proposers" json:"proposers"
    repeated string proposers = 5;
    // 审核人列表
    // @gotags: bson:"auditors" json:"auditors"
    repeated string auditors = 6;
    // 发布号
    // @gotags: bson:"version" json:"version" validate:"required"
    string version = 7;
    // 发布说明
    // @gotags: bson:"describe" json:"describe" validate:"required"
    string describe = 8;
    // 审核通过后, 是否自动执行发布, 默认审核通过后手动发布
    // @gotags: bson:"auto_publish" json:"auto_publish"
    bool auto_publish = 9;
    // 流水线配置
    // @gotags: bson:"-" json:"pipeline_spec,omitempty"
    pipeline.CreatePipelineRequest pipeline_spec = 10;
    // 流水线Id
    // @gotags: bson:"pipeline_id" json:"pipeline_id"
    string pipeline_id = 11;
	// 申请单标签
	// @gotags: bson:"labels" json:"labels"
	map<string, string> labels = 15;
}

enum STAGE {
    // 草稿
	DRAFT = 0;  
	// 待审核
	PENDDING = 1;
    // 已过期, 如果一直没审核, 多久后会过期
    EXPIRED = 2;
	// 审核拒绝
	DENY = 3;
	// 审核通过
	PASSED = 4;

	// 执行中, 关联的流水线正在执行
	RUNNING = 10;
	// 发布取消
	CANCELED = 11;
	// 发布失败
	FAILED = 12;
	// 发布成功
	SUCCEEDED = 13;

    // 无论发布成功或者失败都可以执行回滚
    // 回滚中
    ROLLBACKING = 20;
	// 回滚取消
	ROLLBACK_CANCELED = 21;
	// 回滚失败
	ROLLBACK_FAILED = 22;
	// 回滚成功
	ROLLBACK_SUCCEEDED = 23;

	// 发布关闭, 发布成功后,验证没问题, 发布结束
	CLOSED = 55;
}

message Status {
    // 当前状态
    // @gotags: bson:"stage" json:"stage"
    STAGE stage = 1;
    // 审核时间
    // @gotags: bson:"audit_at" json:"audit_at"
    int64 audit_at = 2;
    // 审核意见
    // @gotags: bson:"audit_comment" json:"audit_comment"
    string audit_comment = 3;
    // 开始发布的时间
    // @gotags: bson:"publish_at" json:"publish_at"
    int64 publish_at = 4;
    // 开始发布的时间
    // @gotags: bson:"cancel_at" json:"cancel_at"
    int64 cancel_at = 5;
    // 取消原因
    // @gotags: bson:"cancel_comment" json:"cancel_comment"
    int64 cancel_comment = 6;
    // 发布结束的时间
    // @gotags: bson:"end_at" json:"end_at"
    int64 end_at = 7;
    // 发布关闭的时间
    // @gotags: bson:"close_at" json:"close_at"
    int64 close_at = 8;
    // 关闭备注
    // @gotags: bson:"close_comment" json:"close_comment"
    string close_comment = 9;
}