syntax = "proto3";

package infraboard.mpaas.job;
option go_package = "github.com/infraboard/mpaas/apps/job";

import "github.com/infraboard/mcube/pb/resource/base.proto";
import "common/meta/meta.proto";

// 执行方式
enum RUNNER_TYPE {
	// 基于K8s Job执行
	K8S_JOB = 0;
}

// 用于从job的run_params中提取出job允许所必须的参数
message K8sJobRunnerParams {
    // 集群Id
	// @gotags: bson:"cluster_id" json:"cluster_id" param:"cluster_id"
    string cluster_id = 1;
    // Job运行的集群空间
	// @gotags: bson:"namespace" json:"namespace" param:"namespace"
	string namespace = 2;
}

// JobSet 列表
message JobSet {
	// 总数量
	// @gotags: bson:"total" json:"total"
    int64 total = 1;
	// 清单
	// @gotags: bson:"items" json:"items"
    repeated Job items = 2;
}

message Job {
    // 元信息
    // @gotags: bson:",inline" json:"meta"
    common.meta.Meta meta = 1;
    // job创建信息
	// @gotags: bson:",inline" json:"spec"
    CreateJobRequest spec = 2; 
}

enum RUN_MODE {
	// 正常运行
	NORMAL = 0;
	// 回滚运行
	ROLLBACK = 1;
}

message CreateJobRequest {
	// 执行器类型, 默认采用k8s job执行
	// @gotags: bson:"runner_type" json:"runner_type"
	RUNNER_TYPE runner_type = 1;
	// 执行器定义, 比如 k8s job 定义
	// @gotags: bson:"runner_spec" json:"runner_spec"
	string runner_spec = 2;
	// Job 的Readme说明文档, 支持Markdown格式
	// @gotags: bson:"readme" json:"readme"
	string readme = 3;
	// 手动更新Job的状态, 默认由job runner的operator更新
	// @gotags: bson:"manual_update_status" json:"manual_update_status"
	bool manual_update_status = 4;
	// 运行时 用户传人的参数说明(不同版本有不同参数)
	// @gotags: bson:"run_params" json:"run_params"
	repeated VersionedRunParam run_params = 5;
	// 是否允许回滚, 有些特殊的操作是不允许回滚的, 
	// 能使用上次执行成功的结果 进行执行 该任务就支持回滚
	// @gotags: bson:"allow_rollback" json:"allow_rollback"
	bool allow_rollback = 6;
	// 回滚参数, 当执行回滚时执行的参数, 往往由上次成功执行的参数进行填充
	// @gotags: bson:"rollback_params" json:"rollback_params"
	repeated VersionedRunParam rollback_params = 7;
	// 所属域
	// @gotags: bson:"domain" json:"domain" validate:"required"
	string domain = 8;
	// 所属空间
	// @gotags: bson:"namespace" json:"namespace" validate:"required"
	string namespace = 9;
	// 创建人
	// @gotags: bson:"create_by" json:"create_by" validate:"required"
	string create_by = 10;
	// 图片
	// @gotags: bson:"logo" json:"logo"
	string logo = 11;
	// 名称, 不能包含特殊字符(. , #)
	// @gotags: bson:"name" json:"name" validate:"required"
	string name = 12;
	// 展示名称
	// @gotags: bson:"display_name" json:"display_name"
	string display_name = 13;
	// 是否是公开Job, 默认只能本空间内访问
	// @gotags: bson:"visiable_mode" json:"visiable_mode"
	mcube.resource.VISIABLE_MODE visiable_mode = 14;
	// 描述
	// @gotags: bson:"description" json:"description"
	string description = 15;
	// 标签
	// @gotags: bson:"labels" json:"labels"
	map<string, string> labels = 25;

}

message VersionedRunParam {
	// Job的版本
	// @gotags: bson:"version" json:"version" validate:"required"
	string version = 1;
	// 版本的描述
	// @gotags: bson:"description" json:"description"
	string description = 2;
	// 运行时 用户传人的参数说明
	// @gotags: bson:"params" json:"params"
	repeated RunParam params = 3;
}

enum PARAM_VALUE_TYPE {
	// 文本
	TEXT = 0;
	// 布尔值, 只能是ture或者false
	BOOLEAN = 1;
	// 枚举
	ENUM = 2;
	// 基于url的远程选项拉去, 仅存储URL地址, 前端自己处理
	HTTP_ENUM = 3;
}

message EnumOption {
	// 选项的说明
	// @gotags: bson:"label" json:"label"
	string label = 1;
	// 选项的值
	// @gotags: bson:"value" json:"value" validate:"required"
	string value = 2;
	// 扩展属性
	// @gotags: bson:"extensions" json:"extensions"
	map<string, string> extensions = 15;
}

message HttpEnumConfig {
	// 基于枚举的URL, 注意只支持Get方法
	// @gotags: bson:"url" json:"url"
	string url = 1;
	// Enum Label映射的字段名
	// @gotags: bson:"enum_label_name" json:"enum_label_name"
	string enum_label_name = 2;
	// Enum Value映射的字段名
	// @gotags: bson:"enum_label_value" json:"enum_label_value"
	string enum_label_value = 3;
}

enum PARAM_USAGE_TYPE {
	// 环境变量
	ENV = 0;
	// 模版变量
	TEMPLATE = 1;
}

message RunParam {
	// 可选/必传
	// @gotags: bson:"required"
	bool required = 1;
	// 参数使用类型
	// @gotags: bson:"usage_type"
	PARAM_USAGE_TYPE usage_type = 2;
	// 参数名称
	// @gotags: bson:"name" json:"name" validate:"required"
	string name = 3;
	// 设置了值后，不允许修改, 用于控制流水线模版变量
	// @gotags: bson:"read_olny" json:"read_olny"
	bool read_olny = 4;
	// 参数描述
	// @gotags: bson:"desc" json:"desc"
	string desc = 5;
	// 值类型
	// @gotags: bson:"value_type" json:"value_type"
	PARAM_VALUE_TYPE value_type = 6;
	// 枚举值的选项
	// @gotags: bson:"enum_options" json:"enum_options,omitempty"
	repeated EnumOption enum_options = 7;
	// 基于Http枚举的配置
	// @gotags: bson:"http_enum_config" json:"http_enum_config,omitempty"
	HttpEnumConfig http_enum_config = 8;
	// 值的样例
	// @gotags: bson:"example" json:"example"
	string example = 9;
	// 默认值, task运行时如果未传人，会填充默认值
	// @gotags: bson:"value" json:"value"
	string value = 10;

	// 扩展属性
	// @gotags: bson:"extensions" json:"extensions"
	map<string, string> extensions = 15;
}