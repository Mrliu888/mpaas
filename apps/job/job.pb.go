// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.21.6
// source: apps/job/pb/job.proto

package job

import (
	resource "github.com/infraboard/mcube/pb/resource"
	meta "github.com/infraboard/mpaas/common/meta"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 执行方式
type RUNNER_TYPE int32

const (
	// 基于K8s Job执行
	RUNNER_TYPE_K8S_JOB RUNNER_TYPE = 0
)

// Enum value maps for RUNNER_TYPE.
var (
	RUNNER_TYPE_name = map[int32]string{
		0: "K8S_JOB",
	}
	RUNNER_TYPE_value = map[string]int32{
		"K8S_JOB": 0,
	}
)

func (x RUNNER_TYPE) Enum() *RUNNER_TYPE {
	p := new(RUNNER_TYPE)
	*p = x
	return p
}

func (x RUNNER_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RUNNER_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_apps_job_pb_job_proto_enumTypes[0].Descriptor()
}

func (RUNNER_TYPE) Type() protoreflect.EnumType {
	return &file_apps_job_pb_job_proto_enumTypes[0]
}

func (x RUNNER_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RUNNER_TYPE.Descriptor instead.
func (RUNNER_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_apps_job_pb_job_proto_rawDescGZIP(), []int{0}
}

type RUN_MODE int32

const (
	// 正常运行
	RUN_MODE_NORMAL RUN_MODE = 0
	// 回滚运行
	RUN_MODE_ROLLBACK RUN_MODE = 1
)

// Enum value maps for RUN_MODE.
var (
	RUN_MODE_name = map[int32]string{
		0: "NORMAL",
		1: "ROLLBACK",
	}
	RUN_MODE_value = map[string]int32{
		"NORMAL":   0,
		"ROLLBACK": 1,
	}
)

func (x RUN_MODE) Enum() *RUN_MODE {
	p := new(RUN_MODE)
	*p = x
	return p
}

func (x RUN_MODE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RUN_MODE) Descriptor() protoreflect.EnumDescriptor {
	return file_apps_job_pb_job_proto_enumTypes[1].Descriptor()
}

func (RUN_MODE) Type() protoreflect.EnumType {
	return &file_apps_job_pb_job_proto_enumTypes[1]
}

func (x RUN_MODE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RUN_MODE.Descriptor instead.
func (RUN_MODE) EnumDescriptor() ([]byte, []int) {
	return file_apps_job_pb_job_proto_rawDescGZIP(), []int{1}
}

type PARAM_VALUE_TYPE int32

const (
	// 文本
	PARAM_VALUE_TYPE_TEXT PARAM_VALUE_TYPE = 0
	// 布尔值, 只能是ture或者false
	PARAM_VALUE_TYPE_BOOLEAN PARAM_VALUE_TYPE = 1
	// 枚举
	PARAM_VALUE_TYPE_ENUM PARAM_VALUE_TYPE = 2
	// 基于url的远程选项拉去, 仅存储URL地址, 前端自己处理
	PARAM_VALUE_TYPE_HTTP_ENUM PARAM_VALUE_TYPE = 3
)

// Enum value maps for PARAM_VALUE_TYPE.
var (
	PARAM_VALUE_TYPE_name = map[int32]string{
		0: "TEXT",
		1: "BOOLEAN",
		2: "ENUM",
		3: "HTTP_ENUM",
	}
	PARAM_VALUE_TYPE_value = map[string]int32{
		"TEXT":      0,
		"BOOLEAN":   1,
		"ENUM":      2,
		"HTTP_ENUM": 3,
	}
)

func (x PARAM_VALUE_TYPE) Enum() *PARAM_VALUE_TYPE {
	p := new(PARAM_VALUE_TYPE)
	*p = x
	return p
}

func (x PARAM_VALUE_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PARAM_VALUE_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_apps_job_pb_job_proto_enumTypes[2].Descriptor()
}

func (PARAM_VALUE_TYPE) Type() protoreflect.EnumType {
	return &file_apps_job_pb_job_proto_enumTypes[2]
}

func (x PARAM_VALUE_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PARAM_VALUE_TYPE.Descriptor instead.
func (PARAM_VALUE_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_apps_job_pb_job_proto_rawDescGZIP(), []int{2}
}

type PARAM_USAGE_TYPE int32

const (
	// 环境变量
	PARAM_USAGE_TYPE_ENV PARAM_USAGE_TYPE = 0
	// 模版变量
	PARAM_USAGE_TYPE_TEMPLATE PARAM_USAGE_TYPE = 1
)

// Enum value maps for PARAM_USAGE_TYPE.
var (
	PARAM_USAGE_TYPE_name = map[int32]string{
		0: "ENV",
		1: "TEMPLATE",
	}
	PARAM_USAGE_TYPE_value = map[string]int32{
		"ENV":      0,
		"TEMPLATE": 1,
	}
)

func (x PARAM_USAGE_TYPE) Enum() *PARAM_USAGE_TYPE {
	p := new(PARAM_USAGE_TYPE)
	*p = x
	return p
}

func (x PARAM_USAGE_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PARAM_USAGE_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_apps_job_pb_job_proto_enumTypes[3].Descriptor()
}

func (PARAM_USAGE_TYPE) Type() protoreflect.EnumType {
	return &file_apps_job_pb_job_proto_enumTypes[3]
}

func (x PARAM_USAGE_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PARAM_USAGE_TYPE.Descriptor instead.
func (PARAM_USAGE_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_apps_job_pb_job_proto_rawDescGZIP(), []int{3}
}

// 用于从job的run_params中提取出job允许所必须的参数
type K8SJobRunnerParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 集群Id
	// @gotags: bson:"cluster_id" json:"cluster_id" param:"cluster_id"
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id" bson:"cluster_id" param:"cluster_id"`
	// Job运行的集群空间
	// @gotags: bson:"namespace" json:"namespace" param:"namespace"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace" bson:"namespace" param:"namespace"`
}

func (x *K8SJobRunnerParams) Reset() {
	*x = K8SJobRunnerParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_job_pb_job_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SJobRunnerParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SJobRunnerParams) ProtoMessage() {}

func (x *K8SJobRunnerParams) ProtoReflect() protoreflect.Message {
	mi := &file_apps_job_pb_job_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SJobRunnerParams.ProtoReflect.Descriptor instead.
func (*K8SJobRunnerParams) Descriptor() ([]byte, []int) {
	return file_apps_job_pb_job_proto_rawDescGZIP(), []int{0}
}

func (x *K8SJobRunnerParams) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *K8SJobRunnerParams) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// JobSet 列表
type JobSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 总数量
	// @gotags: bson:"total" json:"total"
	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total" bson:"total"`
	// 清单
	// @gotags: bson:"items" json:"items"
	Items []*Job `protobuf:"bytes,2,rep,name=items,proto3" json:"items" bson:"items"`
}

func (x *JobSet) Reset() {
	*x = JobSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_job_pb_job_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSet) ProtoMessage() {}

func (x *JobSet) ProtoReflect() protoreflect.Message {
	mi := &file_apps_job_pb_job_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSet.ProtoReflect.Descriptor instead.
func (*JobSet) Descriptor() ([]byte, []int) {
	return file_apps_job_pb_job_proto_rawDescGZIP(), []int{1}
}

func (x *JobSet) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *JobSet) GetItems() []*Job {
	if x != nil {
		return x.Items
	}
	return nil
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 元信息
	// @gotags: bson:",inline" json:"meta"
	Meta *meta.Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta" bson:",inline"`
	// job创建信息
	// @gotags: bson:",inline" json:"spec"
	Spec *CreateJobRequest `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec" bson:",inline"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_job_pb_job_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_apps_job_pb_job_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_apps_job_pb_job_proto_rawDescGZIP(), []int{2}
}

func (x *Job) GetMeta() *meta.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Job) GetSpec() *CreateJobRequest {
	if x != nil {
		return x.Spec
	}
	return nil
}

type CreateJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 执行器类型, 默认采用k8s job执行
	// @gotags: bson:"runner_type" json:"runner_type"
	RunnerType RUNNER_TYPE `protobuf:"varint,1,opt,name=runner_type,json=runnerType,proto3,enum=infraboard.mpaas.job.RUNNER_TYPE" json:"runner_type" bson:"runner_type"`
	// 执行器定义, 比如 k8s job 定义
	// @gotags: bson:"runner_spec" json:"runner_spec"
	RunnerSpec string `protobuf:"bytes,2,opt,name=runner_spec,json=runnerSpec,proto3" json:"runner_spec" bson:"runner_spec"`
	// Job 的Readme说明文档, 支持Markdown格式
	// @gotags: bson:"readme" json:"readme"
	Readme string `protobuf:"bytes,3,opt,name=readme,proto3" json:"readme" bson:"readme"`
	// 手动更新Job的状态, 默认由job runner的operator更新
	// @gotags: bson:"manual_update_status" json:"manual_update_status"
	ManualUpdateStatus bool `protobuf:"varint,4,opt,name=manual_update_status,json=manualUpdateStatus,proto3" json:"manual_update_status" bson:"manual_update_status"`
	// 运行时 用户传人的参数说明(不同版本有不同参数)
	// @gotags: bson:"run_params" json:"run_params"
	RunParams []*VersionedRunParam `protobuf:"bytes,5,rep,name=run_params,json=runParams,proto3" json:"run_params" bson:"run_params"`
	// 是否允许回滚, 有些特殊的操作是不允许回滚的,
	// 能使用上次执行成功的结果 进行执行 该任务就支持回滚
	// @gotags: bson:"allow_rollback" json:"allow_rollback"
	AllowRollback bool `protobuf:"varint,6,opt,name=allow_rollback,json=allowRollback,proto3" json:"allow_rollback" bson:"allow_rollback"`
	// 回滚参数, 当执行回滚时执行的参数, 往往由上次成功执行的参数进行填充
	// @gotags: bson:"rollback_params" json:"rollback_params"
	RollbackParams []*VersionedRunParam `protobuf:"bytes,7,rep,name=rollback_params,json=rollbackParams,proto3" json:"rollback_params" bson:"rollback_params"`
	// 所属域
	// @gotags: bson:"domain" json:"domain" validate:"required"
	Domain string `protobuf:"bytes,8,opt,name=domain,proto3" json:"domain" bson:"domain" validate:"required"`
	// 所属空间
	// @gotags: bson:"namespace" json:"namespace" validate:"required"
	Namespace string `protobuf:"bytes,9,opt,name=namespace,proto3" json:"namespace" bson:"namespace" validate:"required"`
	// 创建人
	// @gotags: bson:"create_by" json:"create_by" validate:"required"
	CreateBy string `protobuf:"bytes,10,opt,name=create_by,json=createBy,proto3" json:"create_by" bson:"create_by" validate:"required"`
	// 图片
	// @gotags: bson:"logo" json:"logo"
	Logo string `protobuf:"bytes,11,opt,name=logo,proto3" json:"logo" bson:"logo"`
	// 图标
	// @gotags: bson:"icon" json:"icon"
	Icon string `protobuf:"bytes,16,opt,name=icon,proto3" json:"icon" bson:"icon"`
	// 名称, 不能包含特殊字符(. , #)
	// @gotags: bson:"name" json:"name" validate:"required"
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name" bson:"name" validate:"required"`
	// 展示名称
	// @gotags: bson:"display_name" json:"display_name"
	DisplayName string `protobuf:"bytes,13,opt,name=display_name,json=displayName,proto3" json:"display_name" bson:"display_name"`
	// 是否是公开Job, 默认只能本空间内访问
	// @gotags: bson:"visiable_mode" json:"visiable_mode"
	VisiableMode resource.VISIABLE_MODE `protobuf:"varint,14,opt,name=visiable_mode,json=visiableMode,proto3,enum=infraboard.mcube.resource.VISIABLE_MODE" json:"visiable_mode" bson:"visiable_mode"`
	// 描述
	// @gotags: bson:"description" json:"description"
	Description string `protobuf:"bytes,15,opt,name=description,proto3" json:"description" bson:"description"`
	// 标签
	// @gotags: bson:"labels" json:"labels"
	Labels map[string]string `protobuf:"bytes,25,rep,name=labels,proto3" json:"labels" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"labels"`
}

func (x *CreateJobRequest) Reset() {
	*x = CreateJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_job_pb_job_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobRequest) ProtoMessage() {}

func (x *CreateJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apps_job_pb_job_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobRequest.ProtoReflect.Descriptor instead.
func (*CreateJobRequest) Descriptor() ([]byte, []int) {
	return file_apps_job_pb_job_proto_rawDescGZIP(), []int{3}
}

func (x *CreateJobRequest) GetRunnerType() RUNNER_TYPE {
	if x != nil {
		return x.RunnerType
	}
	return RUNNER_TYPE_K8S_JOB
}

func (x *CreateJobRequest) GetRunnerSpec() string {
	if x != nil {
		return x.RunnerSpec
	}
	return ""
}

func (x *CreateJobRequest) GetReadme() string {
	if x != nil {
		return x.Readme
	}
	return ""
}

func (x *CreateJobRequest) GetManualUpdateStatus() bool {
	if x != nil {
		return x.ManualUpdateStatus
	}
	return false
}

func (x *CreateJobRequest) GetRunParams() []*VersionedRunParam {
	if x != nil {
		return x.RunParams
	}
	return nil
}

func (x *CreateJobRequest) GetAllowRollback() bool {
	if x != nil {
		return x.AllowRollback
	}
	return false
}

func (x *CreateJobRequest) GetRollbackParams() []*VersionedRunParam {
	if x != nil {
		return x.RollbackParams
	}
	return nil
}

func (x *CreateJobRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *CreateJobRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateJobRequest) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *CreateJobRequest) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *CreateJobRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *CreateJobRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateJobRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *CreateJobRequest) GetVisiableMode() resource.VISIABLE_MODE {
	if x != nil {
		return x.VisiableMode
	}
	return resource.VISIABLE_MODE(0)
}

func (x *CreateJobRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateJobRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type VersionedRunParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Job的版本
	// @gotags: bson:"version" json:"version" validate:"required"
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version" bson:"version" validate:"required"`
	// 版本的描述
	// @gotags: bson:"description" json:"description"
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description" bson:"description"`
	// 运行时 用户传人的参数说明
	// @gotags: bson:"params" json:"params"
	Params []*RunParam `protobuf:"bytes,3,rep,name=params,proto3" json:"params" bson:"params"`
}

func (x *VersionedRunParam) Reset() {
	*x = VersionedRunParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_job_pb_job_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionedRunParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionedRunParam) ProtoMessage() {}

func (x *VersionedRunParam) ProtoReflect() protoreflect.Message {
	mi := &file_apps_job_pb_job_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionedRunParam.ProtoReflect.Descriptor instead.
func (*VersionedRunParam) Descriptor() ([]byte, []int) {
	return file_apps_job_pb_job_proto_rawDescGZIP(), []int{4}
}

func (x *VersionedRunParam) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VersionedRunParam) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VersionedRunParam) GetParams() []*RunParam {
	if x != nil {
		return x.Params
	}
	return nil
}

type EnumOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 选项的说明
	// @gotags: bson:"label" json:"label"
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label" bson:"label"`
	// 选项的值
	// @gotags: bson:"value" json:"value" validate:"required"
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value" bson:"value" validate:"required"`
	// 扩展属性
	// @gotags: bson:"extensions" json:"extensions"
	Extensions map[string]string `protobuf:"bytes,15,rep,name=extensions,proto3" json:"extensions" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"extensions"`
}

func (x *EnumOption) Reset() {
	*x = EnumOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_job_pb_job_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumOption) ProtoMessage() {}

func (x *EnumOption) ProtoReflect() protoreflect.Message {
	mi := &file_apps_job_pb_job_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumOption.ProtoReflect.Descriptor instead.
func (*EnumOption) Descriptor() ([]byte, []int) {
	return file_apps_job_pb_job_proto_rawDescGZIP(), []int{5}
}

func (x *EnumOption) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *EnumOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EnumOption) GetExtensions() map[string]string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

type HttpEnumConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 基于枚举的URL, 注意只支持Get方法
	// @gotags: bson:"url" json:"url"
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url" bson:"url"`
	// Enum Label映射的字段名
	// @gotags: bson:"enum_label_name" json:"enum_label_name"
	EnumLabelName string `protobuf:"bytes,2,opt,name=enum_label_name,json=enumLabelName,proto3" json:"enum_label_name" bson:"enum_label_name"`
	// Enum Value映射的字段名
	// @gotags: bson:"enum_label_value" json:"enum_label_value"
	EnumLabelValue string `protobuf:"bytes,3,opt,name=enum_label_value,json=enumLabelValue,proto3" json:"enum_label_value" bson:"enum_label_value"`
}

func (x *HttpEnumConfig) Reset() {
	*x = HttpEnumConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_job_pb_job_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpEnumConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpEnumConfig) ProtoMessage() {}

func (x *HttpEnumConfig) ProtoReflect() protoreflect.Message {
	mi := &file_apps_job_pb_job_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpEnumConfig.ProtoReflect.Descriptor instead.
func (*HttpEnumConfig) Descriptor() ([]byte, []int) {
	return file_apps_job_pb_job_proto_rawDescGZIP(), []int{6}
}

func (x *HttpEnumConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HttpEnumConfig) GetEnumLabelName() string {
	if x != nil {
		return x.EnumLabelName
	}
	return ""
}

func (x *HttpEnumConfig) GetEnumLabelValue() string {
	if x != nil {
		return x.EnumLabelValue
	}
	return ""
}

type RunParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 可选/必传
	// @gotags: bson:"required"
	Required bool `protobuf:"varint,1,opt,name=required,proto3" json:"required,omitempty" bson:"required"`
	// 参数使用类型
	// @gotags: bson:"usage_type"
	UsageType PARAM_USAGE_TYPE `protobuf:"varint,2,opt,name=usage_type,json=usageType,proto3,enum=infraboard.mpaas.job.PARAM_USAGE_TYPE" json:"usage_type,omitempty" bson:"usage_type"`
	// 参数名称
	// @gotags: bson:"name" json:"name" validate:"required"
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" bson:"name" validate:"required"`
	// 设置了值后，不允许修改, 用于控制流水线模版变量
	// @gotags: bson:"read_only" json:"read_only"
	ReadOnly bool `protobuf:"varint,4,opt,name=read_only,json=readOnly,proto3" json:"read_only" bson:"read_only"`
	// 参数描述
	// @gotags: bson:"desc" json:"desc"
	Desc string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc" bson:"desc"`
	// 值类型
	// @gotags: bson:"value_type" json:"value_type"
	ValueType PARAM_VALUE_TYPE `protobuf:"varint,6,opt,name=value_type,json=valueType,proto3,enum=infraboard.mpaas.job.PARAM_VALUE_TYPE" json:"value_type" bson:"value_type"`
	// 枚举值的选项
	// @gotags: bson:"enum_options" json:"enum_options,omitempty"
	EnumOptions []*EnumOption `protobuf:"bytes,7,rep,name=enum_options,json=enumOptions,proto3" json:"enum_options,omitempty" bson:"enum_options"`
	// 基于Http枚举的配置
	// @gotags: bson:"http_enum_config" json:"http_enum_config,omitempty"
	HttpEnumConfig *HttpEnumConfig `protobuf:"bytes,8,opt,name=http_enum_config,json=httpEnumConfig,proto3" json:"http_enum_config,omitempty" bson:"http_enum_config"`
	// 值的样例
	// @gotags: bson:"example" json:"example"
	Example string `protobuf:"bytes,9,opt,name=example,proto3" json:"example" bson:"example"`
	// 默认值, task运行时如果未传人，会填充默认值
	// @gotags: bson:"value" json:"value"
	Value string `protobuf:"bytes,10,opt,name=value,proto3" json:"value" bson:"value"`
	// 参数生效的范围
	// @gotags: bson:"param_scope" json:"param_scope"
	ParamScope *ParamScope `protobuf:"bytes,11,opt,name=param_scope,json=paramScope,proto3" json:"param_scope" bson:"param_scope"`
	// 是否加入到过滤标签中, 方便过滤搜索, 默认不会加入到搜索标签中
	// @gotags: bson:"search_label" json:"search_label"
	SearchLabel bool `protobuf:"varint,12,opt,name=search_label,json=searchLabel,proto3" json:"search_label" bson:"search_label"`
	// 扩展属性
	// @gotags: bson:"extensions" json:"extensions"
	Extensions map[string]string `protobuf:"bytes,15,rep,name=extensions,proto3" json:"extensions" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"extensions"`
}

func (x *RunParam) Reset() {
	*x = RunParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_job_pb_job_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunParam) ProtoMessage() {}

func (x *RunParam) ProtoReflect() protoreflect.Message {
	mi := &file_apps_job_pb_job_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunParam.ProtoReflect.Descriptor instead.
func (*RunParam) Descriptor() ([]byte, []int) {
	return file_apps_job_pb_job_proto_rawDescGZIP(), []int{7}
}

func (x *RunParam) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *RunParam) GetUsageType() PARAM_USAGE_TYPE {
	if x != nil {
		return x.UsageType
	}
	return PARAM_USAGE_TYPE_ENV
}

func (x *RunParam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunParam) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *RunParam) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RunParam) GetValueType() PARAM_VALUE_TYPE {
	if x != nil {
		return x.ValueType
	}
	return PARAM_VALUE_TYPE_TEXT
}

func (x *RunParam) GetEnumOptions() []*EnumOption {
	if x != nil {
		return x.EnumOptions
	}
	return nil
}

func (x *RunParam) GetHttpEnumConfig() *HttpEnumConfig {
	if x != nil {
		return x.HttpEnumConfig
	}
	return nil
}

func (x *RunParam) GetExample() string {
	if x != nil {
		return x.Example
	}
	return ""
}

func (x *RunParam) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RunParam) GetParamScope() *ParamScope {
	if x != nil {
		return x.ParamScope
	}
	return nil
}

func (x *RunParam) GetSearchLabel() bool {
	if x != nil {
		return x.SearchLabel
	}
	return false
}

func (x *RunParam) GetExtensions() map[string]string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

// 参数生效的范围
type ParamScope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 作用与Stage
	// @gotags: bson:"stage" json:"stage"
	Stage string `protobuf:"bytes,1,opt,name=stage,proto3" json:"stage" bson:"stage"`
	// 作用与Job
	// @gotags: bson:"job" json:"job"
	Job string `protobuf:"bytes,2,opt,name=job,proto3" json:"job" bson:"job"`
	// 作用于标签
	// @gotags: bson:"label" json:"label"
	Label map[string]string `protobuf:"bytes,3,rep,name=label,proto3" json:"label" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"label"`
}

func (x *ParamScope) Reset() {
	*x = ParamScope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_job_pb_job_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamScope) ProtoMessage() {}

func (x *ParamScope) ProtoReflect() protoreflect.Message {
	mi := &file_apps_job_pb_job_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamScope.ProtoReflect.Descriptor instead.
func (*ParamScope) Descriptor() ([]byte, []int) {
	return file_apps_job_pb_job_proto_rawDescGZIP(), []int{8}
}

func (x *ParamScope) GetStage() string {
	if x != nil {
		return x.Stage
	}
	return ""
}

func (x *ParamScope) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *ParamScope) GetLabel() map[string]string {
	if x != nil {
		return x.Label
	}
	return nil
}

var File_apps_job_pb_job_proto protoreflect.FileDescriptor

var file_apps_job_pb_job_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x6a, 0x6f, 0x62, 0x2f, 0x70, 0x62, 0x2f, 0x6a, 0x6f,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x1a, 0x32, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2f, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x51, 0x0a, 0x12, 0x4b, 0x38, 0x73,
	0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x4f, 0x0a, 0x06,
	0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x79, 0x0a,
	0x03, 0x4a, 0x6f, 0x62, 0x12, 0x36, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0xac, 0x06, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a,
	0x0b, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x52, 0x55, 0x4e, 0x4e, 0x45, 0x52,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x0a, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x46, 0x0a, 0x0a,
	0x72, 0x75, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70,
	0x61, 0x61, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65,
	0x64, 0x52, 0x75, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x6f,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x50, 0x0a, 0x0f, 0x72,
	0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x65, 0x64, 0x52, 0x75, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0e, 0x72,
	0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x4d, 0x0a, 0x0d, 0x76, 0x69, 0x73, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x56, 0x49, 0x53, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45,
	0x52, 0x0c, 0x76, 0x69, 0x73, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x4a, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70,
	0x61, 0x61, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x87, 0x01, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x65, 0x64, 0x52, 0x75, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x52, 0x75, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0xc9, 0x01, 0x0a, 0x0a, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x50, 0x0a, 0x0a,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70,
	0x61, 0x61, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3d,
	0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x74, 0x0a,
	0x0e, 0x48, 0x74, 0x74, 0x70, 0x45, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x75, 0x6d,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x75,
	0x6d, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e, 0x75, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xb3, 0x05, 0x0a, 0x08, 0x52, 0x75, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x0a,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x26, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70,
	0x61, 0x61, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x53,
	0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x09, 0x75, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64,
	0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x45, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x43, 0x0a, 0x0c, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4e, 0x0a, 0x10, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x65, 0x6e, 0x75,
	0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61,
	0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x45, 0x6e, 0x75, 0x6d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x68, 0x74, 0x74, 0x70, 0x45, 0x6e, 0x75, 0x6d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x4e, 0x0a, 0x0a, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61,
	0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x52, 0x75, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb1, 0x01, 0x0a, 0x0a, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62,
	0x12, 0x41, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61,
	0x61, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x1a, 0x38, 0x0a, 0x0a, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x1a, 0x0a,
	0x0b, 0x52, 0x55, 0x4e, 0x4e, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x0b, 0x0a, 0x07,
	0x4b, 0x38, 0x53, 0x5f, 0x4a, 0x4f, 0x42, 0x10, 0x00, 0x2a, 0x24, 0x0a, 0x08, 0x52, 0x55, 0x4e,
	0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x4f, 0x4c, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x01, 0x2a,
	0x42, 0x0a, 0x10, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x4e,
	0x55, 0x4d, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x45, 0x4e, 0x55,
	0x4d, 0x10, 0x03, 0x2a, 0x29, 0x0a, 0x10, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x55, 0x53, 0x41,
	0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x4e, 0x56, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x01, 0x42, 0x26,
	0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2f, 0x61, 0x70,
	0x70, 0x73, 0x2f, 0x6a, 0x6f, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apps_job_pb_job_proto_rawDescOnce sync.Once
	file_apps_job_pb_job_proto_rawDescData = file_apps_job_pb_job_proto_rawDesc
)

func file_apps_job_pb_job_proto_rawDescGZIP() []byte {
	file_apps_job_pb_job_proto_rawDescOnce.Do(func() {
		file_apps_job_pb_job_proto_rawDescData = protoimpl.X.CompressGZIP(file_apps_job_pb_job_proto_rawDescData)
	})
	return file_apps_job_pb_job_proto_rawDescData
}

var file_apps_job_pb_job_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_apps_job_pb_job_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_apps_job_pb_job_proto_goTypes = []interface{}{
	(RUNNER_TYPE)(0),            // 0: infraboard.mpaas.job.RUNNER_TYPE
	(RUN_MODE)(0),               // 1: infraboard.mpaas.job.RUN_MODE
	(PARAM_VALUE_TYPE)(0),       // 2: infraboard.mpaas.job.PARAM_VALUE_TYPE
	(PARAM_USAGE_TYPE)(0),       // 3: infraboard.mpaas.job.PARAM_USAGE_TYPE
	(*K8SJobRunnerParams)(nil),  // 4: infraboard.mpaas.job.K8sJobRunnerParams
	(*JobSet)(nil),              // 5: infraboard.mpaas.job.JobSet
	(*Job)(nil),                 // 6: infraboard.mpaas.job.Job
	(*CreateJobRequest)(nil),    // 7: infraboard.mpaas.job.CreateJobRequest
	(*VersionedRunParam)(nil),   // 8: infraboard.mpaas.job.VersionedRunParam
	(*EnumOption)(nil),          // 9: infraboard.mpaas.job.EnumOption
	(*HttpEnumConfig)(nil),      // 10: infraboard.mpaas.job.HttpEnumConfig
	(*RunParam)(nil),            // 11: infraboard.mpaas.job.RunParam
	(*ParamScope)(nil),          // 12: infraboard.mpaas.job.ParamScope
	nil,                         // 13: infraboard.mpaas.job.CreateJobRequest.LabelsEntry
	nil,                         // 14: infraboard.mpaas.job.EnumOption.ExtensionsEntry
	nil,                         // 15: infraboard.mpaas.job.RunParam.ExtensionsEntry
	nil,                         // 16: infraboard.mpaas.job.ParamScope.LabelEntry
	(*meta.Meta)(nil),           // 17: infraboard.mpaas.common.meta.Meta
	(resource.VISIABLE_MODE)(0), // 18: infraboard.mcube.resource.VISIABLE_MODE
}
var file_apps_job_pb_job_proto_depIdxs = []int32{
	6,  // 0: infraboard.mpaas.job.JobSet.items:type_name -> infraboard.mpaas.job.Job
	17, // 1: infraboard.mpaas.job.Job.meta:type_name -> infraboard.mpaas.common.meta.Meta
	7,  // 2: infraboard.mpaas.job.Job.spec:type_name -> infraboard.mpaas.job.CreateJobRequest
	0,  // 3: infraboard.mpaas.job.CreateJobRequest.runner_type:type_name -> infraboard.mpaas.job.RUNNER_TYPE
	8,  // 4: infraboard.mpaas.job.CreateJobRequest.run_params:type_name -> infraboard.mpaas.job.VersionedRunParam
	8,  // 5: infraboard.mpaas.job.CreateJobRequest.rollback_params:type_name -> infraboard.mpaas.job.VersionedRunParam
	18, // 6: infraboard.mpaas.job.CreateJobRequest.visiable_mode:type_name -> infraboard.mcube.resource.VISIABLE_MODE
	13, // 7: infraboard.mpaas.job.CreateJobRequest.labels:type_name -> infraboard.mpaas.job.CreateJobRequest.LabelsEntry
	11, // 8: infraboard.mpaas.job.VersionedRunParam.params:type_name -> infraboard.mpaas.job.RunParam
	14, // 9: infraboard.mpaas.job.EnumOption.extensions:type_name -> infraboard.mpaas.job.EnumOption.ExtensionsEntry
	3,  // 10: infraboard.mpaas.job.RunParam.usage_type:type_name -> infraboard.mpaas.job.PARAM_USAGE_TYPE
	2,  // 11: infraboard.mpaas.job.RunParam.value_type:type_name -> infraboard.mpaas.job.PARAM_VALUE_TYPE
	9,  // 12: infraboard.mpaas.job.RunParam.enum_options:type_name -> infraboard.mpaas.job.EnumOption
	10, // 13: infraboard.mpaas.job.RunParam.http_enum_config:type_name -> infraboard.mpaas.job.HttpEnumConfig
	12, // 14: infraboard.mpaas.job.RunParam.param_scope:type_name -> infraboard.mpaas.job.ParamScope
	15, // 15: infraboard.mpaas.job.RunParam.extensions:type_name -> infraboard.mpaas.job.RunParam.ExtensionsEntry
	16, // 16: infraboard.mpaas.job.ParamScope.label:type_name -> infraboard.mpaas.job.ParamScope.LabelEntry
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_apps_job_pb_job_proto_init() }
func file_apps_job_pb_job_proto_init() {
	if File_apps_job_pb_job_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apps_job_pb_job_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SJobRunnerParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_job_pb_job_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_job_pb_job_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_job_pb_job_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_job_pb_job_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionedRunParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_job_pb_job_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_job_pb_job_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpEnumConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_job_pb_job_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_job_pb_job_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamScope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apps_job_pb_job_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_apps_job_pb_job_proto_goTypes,
		DependencyIndexes: file_apps_job_pb_job_proto_depIdxs,
		EnumInfos:         file_apps_job_pb_job_proto_enumTypes,
		MessageInfos:      file_apps_job_pb_job_proto_msgTypes,
	}.Build()
	File_apps_job_pb_job_proto = out.File
	file_apps_job_pb_job_proto_rawDesc = nil
	file_apps_job_pb_job_proto_goTypes = nil
	file_apps_job_pb_job_proto_depIdxs = nil
}
