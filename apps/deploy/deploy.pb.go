// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: apps/deploy/pb/deploy.proto

package deploy

import (
	meta "github.com/infraboard/mpaas/common/meta"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TYPE int32

const (
	// 基于k8s部署
	TYPE_KUBERNETES TYPE = 0
	// 基于主机部署
	TYPE_HOST TYPE = 1
)

// Enum value maps for TYPE.
var (
	TYPE_name = map[int32]string{
		0: "KUBERNETES",
		1: "HOST",
	}
	TYPE_value = map[string]int32{
		"KUBERNETES": 0,
		"HOST":       1,
	}
)

func (x TYPE) Enum() *TYPE {
	p := new(TYPE)
	*p = x
	return p
}

func (x TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_apps_deploy_pb_deploy_proto_enumTypes[0].Descriptor()
}

func (TYPE) Type() protoreflect.EnumType {
	return &file_apps_deploy_pb_deploy_proto_enumTypes[0]
}

func (x TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TYPE.Descriptor instead.
func (TYPE) EnumDescriptor() ([]byte, []int) {
	return file_apps_deploy_pb_deploy_proto_rawDescGZIP(), []int{0}
}

type DeploymentSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 总数
	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// 清单
	Items []*Deployment `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DeploymentSet) Reset() {
	*x = DeploymentSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_deploy_pb_deploy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentSet) ProtoMessage() {}

func (x *DeploymentSet) ProtoReflect() protoreflect.Message {
	mi := &file_apps_deploy_pb_deploy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentSet.ProtoReflect.Descriptor instead.
func (*DeploymentSet) Descriptor() ([]byte, []int) {
	return file_apps_deploy_pb_deploy_proto_rawDescGZIP(), []int{0}
}

func (x *DeploymentSet) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DeploymentSet) GetItems() []*Deployment {
	if x != nil {
		return x.Items
	}
	return nil
}

type Deployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 元信息
	// @gotags: bson:",inline" json:"meta"
	Meta *meta.Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta" bson:",inline"`
	// 范围信息
	// @gotags: bson:",inline" json:"scope"
	Scope *meta.Scope `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope" bson:",inline"`
	// 创建信息
	// @gotags: bson:",inline" json:"spec"
	Spec *CreateDeploymentRequest `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec" bson:",inline"`
	// 部署配置状态
	// @gotags: bson:"status" json:"status"
	Status *Status `protobuf:"bytes,4,opt,name=status,proto3" json:"status" bson:"status"`
}

func (x *Deployment) Reset() {
	*x = Deployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_deploy_pb_deploy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deployment) ProtoMessage() {}

func (x *Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_apps_deploy_pb_deploy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deployment.ProtoReflect.Descriptor instead.
func (*Deployment) Descriptor() ([]byte, []int) {
	return file_apps_deploy_pb_deploy_proto_rawDescGZIP(), []int{1}
}

func (x *Deployment) GetMeta() *meta.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Deployment) GetScope() *meta.Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *Deployment) GetSpec() *CreateDeploymentRequest {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Deployment) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 部署Token 用于访问集群配置
	// @gotags: json:"token"
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token"`
	// token上传刷新时间
	// @gotags: bson:"token_refresh_at" json:"token_refresh_at"
	TokenRefreshAt int64 `protobuf:"varint,2,opt,name=token_refresh_at,json=tokenRefreshAt,proto3" json:"token_refresh_at" bson:"token_refresh_at"`
	// token最近一次访问时间
	// @gotags: bson:"access_at" json:"access_at"
	AccessAt int64 `protobuf:"varint,3,opt,name=access_at,json=accessAt,proto3" json:"access_at" bson:"access_at"`
	// 访问次数
	// @gotags: bson:"access_count" json:"access_count"
	AccessCount int64 `protobuf:"varint,4,opt,name=access_count,json=accessCount,proto3" json:"access_count" bson:"access_count"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_deploy_pb_deploy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_apps_deploy_pb_deploy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_apps_deploy_pb_deploy_proto_rawDescGZIP(), []int{2}
}

func (x *Status) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Status) GetTokenRefreshAt() int64 {
	if x != nil {
		return x.TokenRefreshAt
	}
	return 0
}

func (x *Status) GetAccessAt() int64 {
	if x != nil {
		return x.AccessAt
	}
	return 0
}

func (x *Status) GetAccessCount() int64 {
	if x != nil {
		return x.AccessCount
	}
	return 0
}

// K8sTypeConfig yaml文本格式的k8s部署相关配置文件
type K8STypeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 部署集群的名称
	// @gotags: bson:"cluster_id" json:"cluster_id" validate:"required"
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id" bson:"cluster_id" validate:"required"`
	// 负载类型
	// @gotags: bson:"workload_kind" json:"workload_kind"
	WorkloadKind string `protobuf:"bytes,2,opt,name=workload_kind,json=workloadKind,proto3" json:"workload_kind" bson:"workload_kind"`
	// k8s yaml配置, 支持deploy/statfulset/daemonset/job/cronjob
	// @gotags: bson:"workload_config" json:"workload_config" validate:"required"
	WorkloadConfig string `protobuf:"bytes,3,opt,name=workload_config,json=workloadConfig,proto3" json:"workload_config" bson:"workload_config" validate:"required"`
	// k8s service配置
	// @gotags: bson:"service" json:"service"
	Service string `protobuf:"bytes,4,opt,name=service,proto3" json:"service" bson:"service"`
}

func (x *K8STypeConfig) Reset() {
	*x = K8STypeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_deploy_pb_deploy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8STypeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8STypeConfig) ProtoMessage() {}

func (x *K8STypeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_apps_deploy_pb_deploy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8STypeConfig.ProtoReflect.Descriptor instead.
func (*K8STypeConfig) Descriptor() ([]byte, []int) {
	return file_apps_deploy_pb_deploy_proto_rawDescGZIP(), []int{3}
}

func (x *K8STypeConfig) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *K8STypeConfig) GetWorkloadKind() string {
	if x != nil {
		return x.WorkloadKind
	}
	return ""
}

func (x *K8STypeConfig) GetWorkloadConfig() string {
	if x != nil {
		return x.WorkloadConfig
	}
	return ""
}

func (x *K8STypeConfig) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

// HostTypeConfig 主机部署相关配置
type HostTypeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostTypeConfig) Reset() {
	*x = HostTypeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_deploy_pb_deploy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostTypeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostTypeConfig) ProtoMessage() {}

func (x *HostTypeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_apps_deploy_pb_deploy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostTypeConfig.ProtoReflect.Descriptor instead.
func (*HostTypeConfig) Descriptor() ([]byte, []int) {
	return file_apps_deploy_pb_deploy_proto_rawDescGZIP(), []int{4}
}

type CreateDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否是模版
	// @gotags: bson:"is_template" json:"is_template"
	IsTemplate bool `protobuf:"varint,1,opt,name=is_template,json=isTemplate,proto3" json:"is_template" bson:"is_template"`
	// 服务Id
	// @gotags: bson:"service_id" json:"service_id" validate:"required"
	ServiceId string `protobuf:"bytes,3,opt,name=service_id,json=serviceId,proto3" json:"service_id" bson:"service_id" validate:"required"`
	// 服务名称
	// @gotags: bson:"service_name" json:"service_name"
	ServiceName string `protobuf:"bytes,4,opt,name=service_name,json=serviceName,proto3" json:"service_name" bson:"service_name"`
	// 服务版本, k8s部署时 通过yaml自动提取
	// @gotags: bson:"service_version" json:"service_version"
	ServiceVersion string `protobuf:"bytes,5,opt,name=service_version,json=serviceVersion,proto3" json:"service_version" bson:"service_version"`
	// 部署环境
	// @gotags: bson:"environment" json:"environment" validate:"required"
	Environment string `protobuf:"bytes,6,opt,name=environment,proto3" json:"environment" bson:"environment" validate:"required"`
	// 部署资源提供方
	// @gotags: bson:"provider" json:"provider" validate:"required"
	Provider string `protobuf:"bytes,7,opt,name=provider,proto3" json:"provider" bson:"provider" validate:"required"`
	// 部署地域
	// @gotags: bson:"region" json:"region" validate:"required"
	Region string `protobuf:"bytes,8,opt,name=region,proto3" json:"region" bson:"region" validate:"required"`
	// 部署方式
	// @gotags: bson:"type" json:"type"
	Type TYPE `protobuf:"varint,9,opt,name=type,proto3,enum=infraboard.mpaas.deploy.TYPE" json:"type" bson:"type"`
	// 集群的配置是否需要认证才能访问, 开启后会生成一个Token
	// @gotags: bson:"auth_enabled" json:"auth_enabled"
	AuthEnabled bool `protobuf:"varint,10,opt,name=auth_enabled,json=authEnabled,proto3" json:"auth_enabled" bson:"auth_enabled"`
	// k8s模式下的部署配置
	// @gotags: json:"k8s_type_config" bson:"k8s_type_config"
	K8STypeConfig *K8STypeConfig `protobuf:"bytes,11,opt,name=k8s_type_config,json=k8sTypeConfig,proto3" json:"k8s_type_config" bson:"k8s_type_config"`
	// 主机部署相关配置
	// @gotags: json:"host_type_config" bson:"host_type_config"
	HostTypeConfig *HostTypeConfig `protobuf:"bytes,12,opt,name=host_type_config,json=hostTypeConfig,proto3" json:"host_type_config" bson:"host_type_config"`
	// 部署描述信息
	// @gotags: bson:"describe" json:"describe"
	Describe string `protobuf:"bytes,13,opt,name=describe,proto3" json:"describe" bson:"describe"`
	// 部署Id, 没有系统会自动生成
	// @gotags: bson:"deploy_id" json:"deploy_id"
	DeployId string `protobuf:"bytes,14,opt,name=deploy_id,json=deployId,proto3" json:"deploy_id" bson:"deploy_id"`
	// 是否需要发布申请, 需要发布申请的部署 不允许执行自动部署
	// @gotags: bson:"is_approval" json:"is_approval"
	IsApproval bool `protobuf:"varint,15,opt,name=is_approval,json=isApproval,proto3" json:"is_approval" bson:"is_approval"`
	// 部署标签
	// @gotags: bson:"labels" json:"labels"
	Labels map[string]string `protobuf:"bytes,25,rep,name=labels,proto3" json:"labels" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"labels"`
}

func (x *CreateDeploymentRequest) Reset() {
	*x = CreateDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_deploy_pb_deploy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeploymentRequest) ProtoMessage() {}

func (x *CreateDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apps_deploy_pb_deploy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeploymentRequest.ProtoReflect.Descriptor instead.
func (*CreateDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_apps_deploy_pb_deploy_proto_rawDescGZIP(), []int{5}
}

func (x *CreateDeploymentRequest) GetIsTemplate() bool {
	if x != nil {
		return x.IsTemplate
	}
	return false
}

func (x *CreateDeploymentRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *CreateDeploymentRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *CreateDeploymentRequest) GetServiceVersion() string {
	if x != nil {
		return x.ServiceVersion
	}
	return ""
}

func (x *CreateDeploymentRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *CreateDeploymentRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CreateDeploymentRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CreateDeploymentRequest) GetType() TYPE {
	if x != nil {
		return x.Type
	}
	return TYPE_KUBERNETES
}

func (x *CreateDeploymentRequest) GetAuthEnabled() bool {
	if x != nil {
		return x.AuthEnabled
	}
	return false
}

func (x *CreateDeploymentRequest) GetK8STypeConfig() *K8STypeConfig {
	if x != nil {
		return x.K8STypeConfig
	}
	return nil
}

func (x *CreateDeploymentRequest) GetHostTypeConfig() *HostTypeConfig {
	if x != nil {
		return x.HostTypeConfig
	}
	return nil
}

func (x *CreateDeploymentRequest) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *CreateDeploymentRequest) GetDeployId() string {
	if x != nil {
		return x.DeployId
	}
	return ""
}

func (x *CreateDeploymentRequest) GetIsApproval() bool {
	if x != nil {
		return x.IsApproval
	}
	return false
}

func (x *CreateDeploymentRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

var File_apps_deploy_pb_deploy_proto protoreflect.FileDescriptor

var file_apps_deploy_pb_deploy_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2f, 0x70, 0x62,
	0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60,
	0x0a, 0x0d, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0xfe, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x36, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x44, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70,
	0x61, 0x61, 0x73, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x88, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x96, 0x01, 0x0a,
	0x0d, 0x4b, 0x38, 0x73, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x4b, 0x69,
	0x6e, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xdf, 0x05, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x54, 0x59,
	0x50, 0x45, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x61, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x0f, 0x6b,
	0x38, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x4b,
	0x38, 0x73, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x6b, 0x38,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x51, 0x0a, 0x10, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e,
	0x48, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e,
	0x68, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x54, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39,
	0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x20, 0x0a, 0x04, 0x54, 0x59, 0x50,
	0x45, 0x12, 0x0e, 0x0a, 0x0a, 0x4b, 0x55, 0x42, 0x45, 0x52, 0x4e, 0x45, 0x54, 0x45, 0x53, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x4f, 0x53, 0x54, 0x10, 0x01, 0x42, 0x29, 0x5a, 0x27, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2f, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apps_deploy_pb_deploy_proto_rawDescOnce sync.Once
	file_apps_deploy_pb_deploy_proto_rawDescData = file_apps_deploy_pb_deploy_proto_rawDesc
)

func file_apps_deploy_pb_deploy_proto_rawDescGZIP() []byte {
	file_apps_deploy_pb_deploy_proto_rawDescOnce.Do(func() {
		file_apps_deploy_pb_deploy_proto_rawDescData = protoimpl.X.CompressGZIP(file_apps_deploy_pb_deploy_proto_rawDescData)
	})
	return file_apps_deploy_pb_deploy_proto_rawDescData
}

var file_apps_deploy_pb_deploy_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_apps_deploy_pb_deploy_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_apps_deploy_pb_deploy_proto_goTypes = []interface{}{
	(TYPE)(0),                       // 0: infraboard.mpaas.deploy.TYPE
	(*DeploymentSet)(nil),           // 1: infraboard.mpaas.deploy.DeploymentSet
	(*Deployment)(nil),              // 2: infraboard.mpaas.deploy.Deployment
	(*Status)(nil),                  // 3: infraboard.mpaas.deploy.Status
	(*K8STypeConfig)(nil),           // 4: infraboard.mpaas.deploy.K8sTypeConfig
	(*HostTypeConfig)(nil),          // 5: infraboard.mpaas.deploy.HostTypeConfig
	(*CreateDeploymentRequest)(nil), // 6: infraboard.mpaas.deploy.CreateDeploymentRequest
	nil,                             // 7: infraboard.mpaas.deploy.CreateDeploymentRequest.LabelsEntry
	(*meta.Meta)(nil),               // 8: infraboard.mpaas.common.meta.Meta
	(*meta.Scope)(nil),              // 9: infraboard.mpaas.common.meta.Scope
}
var file_apps_deploy_pb_deploy_proto_depIdxs = []int32{
	2, // 0: infraboard.mpaas.deploy.DeploymentSet.items:type_name -> infraboard.mpaas.deploy.Deployment
	8, // 1: infraboard.mpaas.deploy.Deployment.meta:type_name -> infraboard.mpaas.common.meta.Meta
	9, // 2: infraboard.mpaas.deploy.Deployment.scope:type_name -> infraboard.mpaas.common.meta.Scope
	6, // 3: infraboard.mpaas.deploy.Deployment.spec:type_name -> infraboard.mpaas.deploy.CreateDeploymentRequest
	3, // 4: infraboard.mpaas.deploy.Deployment.status:type_name -> infraboard.mpaas.deploy.Status
	0, // 5: infraboard.mpaas.deploy.CreateDeploymentRequest.type:type_name -> infraboard.mpaas.deploy.TYPE
	4, // 6: infraboard.mpaas.deploy.CreateDeploymentRequest.k8s_type_config:type_name -> infraboard.mpaas.deploy.K8sTypeConfig
	5, // 7: infraboard.mpaas.deploy.CreateDeploymentRequest.host_type_config:type_name -> infraboard.mpaas.deploy.HostTypeConfig
	7, // 8: infraboard.mpaas.deploy.CreateDeploymentRequest.labels:type_name -> infraboard.mpaas.deploy.CreateDeploymentRequest.LabelsEntry
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_apps_deploy_pb_deploy_proto_init() }
func file_apps_deploy_pb_deploy_proto_init() {
	if File_apps_deploy_pb_deploy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apps_deploy_pb_deploy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_deploy_pb_deploy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_deploy_pb_deploy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_deploy_pb_deploy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8STypeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_deploy_pb_deploy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostTypeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_deploy_pb_deploy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apps_deploy_pb_deploy_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_apps_deploy_pb_deploy_proto_goTypes,
		DependencyIndexes: file_apps_deploy_pb_deploy_proto_depIdxs,
		EnumInfos:         file_apps_deploy_pb_deploy_proto_enumTypes,
		MessageInfos:      file_apps_deploy_pb_deploy_proto_msgTypes,
	}.Build()
	File_apps_deploy_pb_deploy_proto = out.File
	file_apps_deploy_pb_deploy_proto_rawDesc = nil
	file_apps_deploy_pb_deploy_proto_goTypes = nil
	file_apps_deploy_pb_deploy_proto_depIdxs = nil
}
