syntax = "proto3";

package infraboard.mpaas.deploy;
option go_package = "github.com/infraboard/mpaas/apps/deploy";

import "github.com/infraboard/mcube/pb/request/request.proto";
import "github.com/infraboard/mcube/pb/page/page.proto";
import "apps/deploy/pb/deploy.proto";

// RPC 应用部署配置
service RPC {
    rpc QueryDeployment(QueryDeploymentRequest) returns(DeploymentSet);
    rpc DescribeDeployment(DescribeDeploymentRequest) returns(Deployment);
    rpc UpdateDeploymentStatus(UpdateDeploymentStatusRequest) returns(Deployment);
}

message UpdateDeploymentStatusRequest {
    // 部署Id
    // @gotags: json:"id"
    string id = 1;
    // 更新Token, 校验合法性
    // @gotags: json:"update_token"
    string update_token = 2;
    // 更新人
    // @gotags: json:"update_by"
    string update_by = 3;
    // 部署状态
    // @gotags: json:"status"
    Status status = 4;
    // k8s相关配置更新
    // @gotags: json:"k8s_update_detail"
    K8sUpdateDetail k8s_update_detail = 5;
}

// 实时更新k8s相关配置
message K8sUpdateDetail {
    // k8s yaml配置, 支持deploy/statfulset/daemonset/job/cronjob
    // @gotags: bson:"workload_config" json:"workload_config" validate:"required"
    string workload_config = 1;
    // k8s service配置
    // @gotags: bson:"service" json:"service"
    string service = 2;
}

message QueryDeploymentRequest {
    // 分页请求
    // @gotags: json:"page"
    mcube.page.PageRequest page = 1;
    // 部署Id列表
    // @gotags: json:"ids"
    repeated string ids = 2;
}

enum DESCRIBE_BY {
    // 用户的ID
    ID = 0;
}

message DescribeDeploymentRequest {
    // 查询方式
    // @gotags: json:"describe_by"
    DESCRIBE_BY describe_by = 1;
    // 查询值
    // @gotags: json:"describe_value"  validate:"required"
    string describe_value = 2;
}

message UpdateDeploymentRequest {
    // 更新模式
    // @gotags: json:"update_mode"
    infraboard.mcube.request.UpdateMode update_mode = 1;
    // 部署Id
    // @gotags: json:"id"
    string id = 2;
    // 更新人
    // @gotags: json:"update_by"
    string update_by = 3;
    // 创建信息
    // @gotags: json:"spec"
    CreateDeploymentRequest spec = 4;
}

message DeleteDeploymentRequest {
    // 部署Id
    // @gotags: json:"id"
    string id = 1;
}

