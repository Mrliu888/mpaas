syntax = "proto3";

package infraboard.mpaas.deploy;
option go_package = "github.com/infraboard/mpaas/apps/deploy";

import "github.com/infraboard/mcube/pb/request/request.proto";
import "github.com/infraboard/mcube/pb/page/page.proto";
import "apps/deploy/pb/deploy.proto";

// RPC 应用部署配置
service RPC {
    rpc UpdateDeployConfig(UpdateDeployConfigRequest) returns(DeployConfig);
    rpc QueryDeployConfig(QueryDeployConfigRequest) returns(DeployConfigSet);
    rpc DescribeDeployConfig(DescribeDeployConfigRequest) returns(DeployConfig);
    rpc UpdateDeployConfigStatus(UpdateDeployConfigStatusRequest) returns(DeployConfig);
}

message UpdateDeployConfigStatusRequest {
    
}

message QueryDeployConfigRequest {
    // 分页请求
    // @gotags: json:"page"
    mcube.page.PageRequest page = 1;
    // 部署Id列表
    // @gotags: json:"ids"
    repeated string ids = 2;
}

enum DESCRIBE_BY {
    // 用户的ID
    ID = 0;
}

message DescribeDeployConfigRequest {
    // 查询方式
    // @gotags: json:"describe_by"
    DESCRIBE_BY describe_by = 1;
    // 查询值
    // @gotags: json:"describe_value"  validate:"required"
    string describe_value = 2;
}

message UpdateDeployConfigRequest {
    // 更新模式
    // @gotags: json:"update_mode"
    infraboard.mcube.request.UpdateMode update_mode = 1;
    // 部署Id
    // @gotags: json:"id"
    string id = 2;
    // 更新人
    // @gotags: json:"update_by"
    string update_by = 3;
    // 创建信息
    // @gotags: json:"spec"
    CreateDeployConfigRequest spec = 4;
}

message DeleteDeployConfigRequest {
    // 部署Id
    // @gotags: json:"id"
    string id = 1;
}

